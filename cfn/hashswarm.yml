---
AWSTemplateFormatVersion: '2010-09-09'
Description: "HashSwarm"
Parameters:

  HashSwarmAMIId:
    Type: String
    Description: "The HashSwarm AMI"

  InstanceType:
    Type: String
    Description: "The instance type that is going to be used to run hashcat"
    Default: "p3.2xlarge"

  SubnetsIds:
    Type: List<AWS::EC2::Subnet::Id>
    Descirption: "The list of subnet where the instances can be deployed"
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Descirption: "The security group id that is going to be associated to the instance"

Resources:

  JobDeadLetterQueue:
    Type: AWS::SQS::Queue

  JobQueue:
    Type: AWS::SQS::Queue
    Properties:
      ReceiveMessageWaitTimeSeconds: 20
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt JobDeadLetterQueue.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 3600

  JobFileStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        - ExpirationInDays: 3
          Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256

  HashSwarmWorkerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: "/"
      Policies:
      - PolicyName: AllowToDownloadJobFiles
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action:
            - s3:Get*
            - s3:List*
            Effect: Allow
            Resource:
            - !Sub 'arn:aws:s3:::${JobFileStorageBucket}'
            - !Sub 'arn:aws:s3:::${JobFileStorageBucket}/*'
      - PolicyName: AllowToGetCloudWatchAgentConfiguration
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            Effect: Allow
            Action:
            - ssm:GetParameters
            Resource:
            - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/hashswarm/*'

  HashSwarmWorkerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: HashSwarmWorkerInstanceRole

  InstanceTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: hashswarm-worker-template
      LaunchTemplateData:
        ImageId: !Ref HashSwarmAMIId
        IamInstanceProfile:
          Arn: !GetAtt HashSwarmWorkerInstanceProfile.Arn
        InstanceMarketOptions:
          MarketType: spot
          SpotOptions:
            InstanceInterruptionBehavior: "terminate"
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref SecurityGroupId
        UserData: !Sub !Base64 |
          {"HASHSWARM_QUEUE_URL": "${JobQueue}", "HASHSWARM_JOB_FILE_BUCKET": "${JobFileStorageBucket}"}

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: "0"
      MinSize: "0"
      MaxSize: "0"
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: 0
          SpotAllocationStrategy: lowest-price
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref InstanceTemplate
      VPCZoneIdentifier: !Ref SubnetsIds






  HashSwarmLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /hashswarm
      RetentionInDays: 10

  CloudWatchAgentConfigurationParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /hashswarm/config/cloudwatch
      Description: CloudWatchAgent configuration in HashSwarm workers
      Type: String
      Value: !Sub >
          {
              "agent": {
                  "metrics_collection_interval": 10,
                  "logfile": "/opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log"
              },
              "metrics": {
                  "metrics_collected": {
                      "cpu": {
                          "resources": [
                              "*"
                          ],
                          "measurement": [
                              {
                                  "name": "cpu_usage_idle",
                                  "rename": "CPU_USAGE_IDLE",
                                  "unit": "Percent"
                              },
                              {
                                  "name": "cpu_usage_nice",
                                  "unit": "Percent"
                              },
                              "cpu_usage_guest"
                          ],
                          "totalcpu": false,
                          "metrics_collection_interval": 60
                      },
                      "disk": {
                          "resources": [
                              "/",
                              "/tmp"
                          ],
                          "measurement": [
                              {
                                  "name": "free",
                                  "rename": "DISK_FREE",
                                  "unit": "Gigabytes"
                              },
                              "total",
                              "used"
                          ],
                          "ignore_file_system_types": [
                              "sysfs",
                              "devtmpfs"
                          ],
                          "metrics_collection_interval": 60
                      },
                      "diskio": {
                          "resources": [
                              "*"
                          ],
                          "measurement": [
                              "reads",
                              "writes",
                              "read_time",
                              "write_time",
                              "io_time"
                          ],
                          "metrics_collection_interval": 60
                      },
                      "mem": {
                          "measurement": [
                              "mem_used",
                              "mem_cached",
                              "mem_total"
                          ],
                          "metrics_collection_interval": 60
                      },
                      "net": {
                          "resources": [
                              "eth0"
                          ],
                          "measurement": [
                              "bytes_sent",
                              "bytes_recv",
                              "drop_in",
                              "drop_out"
                          ]
                      },
                      "processes": {
                          "measurement": [
                              "running",
                              "sleeping",
                              "dead"
                          ]
                      }
                  },
                  "append_dimensions": {
                      "InstanceId": "${aws:InstanceId}",
                      "InstanceType": "${aws:InstanceType}",
                      "AutoScalingGroupName": "${aws:AutoScalingGroupName}"
                  },
                  "aggregation_dimensions": [
                      [
                          "AutoScalingGroupName"
                      ]
                  ],
                  "force_flush_interval": 30
              },
              "logs": {
                  "logs_collected": {
                      "files": {
                          "collect_list": [
                              {
                                  "file_path": "/var/log/hashswarm/hashswarm.log",
                                  "log_group_name": "/hashswarm",
                                  "timezone": "UTC"
                              }
                          ]
                      }
                  },
                  "force_flush_interval": 15
              }
          }